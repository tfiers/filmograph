version: '2'

volumes:
    dbvol: {}

services:
    db:
        image: postgres
        volumes: ['dbvol:/var/lib/postgresql/data']
        environment:
            - POSTGRES_PASSWORD

    # broker:
    #     image: rabbitmq

    # miner:
    #     build: ./app
    #     command: python miner/miner.py
    #     environment:
    #         - POSTGRES_PASSWORD
    #         - LOGGING_LEVEL
    #         - THEMOVIEDB_API_KEY

    # es-app:
    #     image: elasticsearch

    web:
        build: ./app
        command: python webapp/webapp.py  # For development
        # command: gunicorn webapp.webapp:app -c webapp/gunicorn_conf.py  # In production
        environment:
            - POSTGRES_PASSWORD
            - LOGGING_LEVEL

    proxy:
        build: ./proxy
        ports:
            - '80:80'       # web
            - '5432:5432'   # db
            - '5601:5601'   # kibana

    es-monitor:
        image: elasticsearch

    logstash:
        build: ./monitoring/logstash

    kibana:
        build: ./monitoring/kibana
